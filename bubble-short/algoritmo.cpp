#include <iostream>
#include <chrono>
using namespace std;
using namespace std::chrono;
#define Total 200

void bubbleShort(int lista[Total])
{
    for (int i = 0; i < Total - 1; i++)
    {
        int contadorDeRecorrencia = 0;

        for (int j = 0; j < Total - 1 - i; j++)
        {

            if (lista[j] > lista[j + 1])
            {
                int aux = lista[j];
                lista[j] = lista[j + 1];
                lista[j + 1] = aux;
                contadorDeRecorrencia++;
            }
        }
        if (contadorDeRecorrencia == 0)
        {
            break;
        }
    }
}

void bubbleShortSemOcorrencia(int lista[Total])
{
    for (int i = 0; i < Total - 1; i++)
    {

        for (int j = 0; j < Total - 1 - i; j++)
        {

            if (lista[j] > lista[j + 1])
            {
                int aux = lista[j];
                lista[j] = lista[j + 1];
                lista[j + 1] = aux;
            }
        }
    }
}

int main()
{
    int lista[Total] = {
        823, 19, 547, 991, 12, 458, 234, 678, 890, 345,
        765, 432, 876, 123, 456, 789, 321, 654, 987, 234,
        12, 346, 789, 102, 459, 678, 912, 456, 234, 567,
        678, 890, 123, 789, 432, 654, 890, 213, 768, 902,
        341, 678, 124, 789, 555, 234, 678, 999, 456, 321,
        234, 908, 876, 543, 678, 123, 432, 567, 890, 234,
        123, 456, 345, 234, 765, 789, 654, 432, 908, 234,
        543, 234, 678, 321, 987, 678, 543, 234, 789, 432,
        654, 987, 123, 456, 789, 102, 234, 345, 678, 908,
        123, 543, 321, 765, 678, 890, 987, 234, 123, 345,
        456, 789, 567, 890, 123, 654, 432, 567, 345, 678,
        789, 123, 654, 432, 908, 234, 543, 234, 987, 789,
        321, 654, 432, 234, 890, 678, 123, 789, 456, 345,
        678, 890, 432, 123, 987, 654, 432, 567, 908, 123,
        654, 432, 765, 234, 543, 321, 123, 345, 789, 654,
        890, 123, 432, 567, 789, 890, 432, 123, 456, 321,
        234, 654, 789, 234, 567, 678, 890, 987, 123, 654,
        432, 908, 234, 567, 789, 890, 123, 654, 987, 432,
        345, 678, 123, 908, 543, 789, 654, 987, 432, 234,
        1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

    int segundaLista[Total] = {
        823, 19, 547, 991, 12, 458, 234, 678, 890, 345,
        765, 432, 876, 123, 456, 789, 321, 654, 987, 234,
        12, 346, 789, 102, 459, 678, 912, 456, 234, 567,
        678, 890, 123, 789, 432, 654, 890, 213, 768, 902,
        341, 678, 124, 789, 555, 234, 678, 999, 456, 321,
        234, 908, 876, 543, 678, 123, 432, 567, 890, 234,
        123, 456, 345, 234, 765, 789, 654, 432, 908, 234,
        543, 234, 678, 321, 987, 678, 543, 234, 789, 432,
        654, 987, 123, 456, 789, 102, 234, 345, 678, 908,
        123, 543, 321, 765, 678, 890, 987, 234, 123, 345,
        456, 789, 567, 890, 123, 654, 432, 567, 345, 678,
        789, 123, 654, 432, 908, 234, 543, 234, 987, 789,
        321, 654, 432, 234, 890, 678, 123, 789, 456, 345,
        678, 890, 432, 123, 987, 654, 432, 567, 908, 123,
        654, 432, 765, 234, 543, 321, 123, 345, 789, 654,
        890, 123, 432, 567, 789, 890, 432, 123, 456, 321,
        234, 654, 789, 234, 567, 678, 890, 987, 123, 654,
        432, 908, 234, 567, 789, 890, 123, 654, 987, 432,
        345, 678, 123, 908, 543, 789, 654, 987, 432, 234,
        1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

    cout << endl;

    auto start = steady_clock::now();
    bubbleShortSemOcorrencia(lista);

    auto end = steady_clock::now();

    auto elapsed = end - start;

    cout << "Tempo de execucao do bubble short sem ponto de parada : " << elapsed.count() << " ns/n" << endl;

    cout << endl;

    cout << endl;

    start = steady_clock::now();
    bubbleShort(segundaLista);
    end = steady_clock::now();

    elapsed = end - start;

    cout << "Tempo de execucao do bubble short com ponto de parada : " << elapsed.count() << " ns/n" << endl;

    cout << endl;

    for (size_t i = 0; i < Total; i++)
    {
        cout << lista[i] << " ";
    }
    cout << endl;

    return 0;
}